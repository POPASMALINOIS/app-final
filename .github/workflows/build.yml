name: Build Windows (WPF .NET 8)

on:
  workflow_dispatch: {}

jobs:
  build-win:
    runs-on: windows-2022
    timeout-minutes: 30
    env:
      DOTNET_NOLOGO: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Detect solution or project
        shell: pwsh
        run: |
          $sln = Get-ChildItem -Path . -Filter *.sln -Recurse | Select-Object -First 1
          if ($sln) {
            "PROJECT_PATH=$($sln.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
            "PROJECT_KIND=SLN" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Host "✅ Using solution: $($sln.FullName)"
          }
          else {
            $csproj = Get-ChildItem -Path . -Filter *.csproj -Recurse | Where-Object { $_.FullName -notmatch '\\obj\\|\\bin\\' } | Select-Object -First 1
            if ($csproj) {
              "PROJECT_PATH=$($csproj.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
              "PROJECT_KIND=CSPROJ" | Out-File -FilePath $env:GITHUB_ENV -Append
              Write-Host "✅ Using csproj: $($csproj.FullName)"
            }
            else {
              Write-Error "❌ No se encontró ningún .sln ni .csproj en el repositorio."
            }
          }

      - name: Restore
        shell: pwsh
        run: dotnet restore "$env:PROJECT_PATH" -v minimal

      - name: Build (Release)
        shell: pwsh
        run: dotnet build "$env:PROJECT_PATH" -c Release --no-restore -p:UseWpf=true -v minimal

      - name: Publish (self-contained, single file)
        shell: pwsh
        run: |
          $out = "Publish/win-x64"
          dotnet publish "$env:PROJECT_PATH" `
            -c Release `
            -r win-x64 `
            --self-contained true `
            -p:PublishSingleFile=true `
            -p:IncludeNativeLibrariesForSelfExtract=true `
            -p:PublishTrimmed=false `
            -p:UseWpf=true `
            -o $out `
            -v minimal
          Compress-Archive -Path "$out/*" -DestinationPath "OperativaLogistica-win-x64.zip" -Force

      - name: Upload artifact (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: OperativaLogistica-win-x64
          path: OperativaLogistica-win-x64.zip
